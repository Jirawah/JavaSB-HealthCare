services:
  patientdb:
    container_name: patientdb
    image: mysql:8
    ports:
      - "3308:3306"
    environment:
      MYSQL_DATABASE: patientdb
      MYSQL_ROOT_PASSWORD: Emma@Kiko3615!
    volumes:
      - patient_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 10s
      retries: 10
      interval: 10s
      start_period: 10s
    networks:
      - healthcare

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "8083:80"  # Accès via http://localhost:8083 (8082 est déjà pris par webapp)
    environment:
      PMA_HOST: patientdb  # Doit correspondre à "container_name" du service patientdb
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: Emma@Kiko3615!
    depends_on:
      patientdb:
        condition: service_healthy
    networks:
      - healthcare

  configserver:
    image: jirawah/configserver:latest
    container_name: configserver-ms
    ports:
      - "8071:8071"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "--silent", "http://localhost:8071/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      patientdb:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-base-config
    networks:
      - healthcare

  eurekaserver:
    image: jirawah/eurekaserver:latest
    container_name: eurekaserver-ms
    ports:
      - "8070:8070"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "--silent", "http://localhost:8070/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      configserver:
        condition: service_healthy
      patientdb:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-configserver-config
    environment:
      SPRING_APPLICATION_NAME: "eurekaserver"
      SPRING_PROFILES_ACTIVE: "eurekaserver"
    networks:
      - healthcare

  mspatient:
    image: jirawah/mspatient:latest
    container_name: mspatient-ms
    ports:
      - "8081:8081"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "--silent", "http://localhost:8081/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
      patientdb:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-base-config
    networks:
      - healthcare

  msnote:
    image: jirawah/msnote:latest
    container_name: msnote-ms
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=msnote
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
      mongodb:
        condition: service_started
    extends:
      file: common-config.yml
      service: microservice-base-config
    networks:
      - healthcare

  msscore:
    image: jirawah/msscore:latest
    container_name: msscore-ms
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=msscore
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8084/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    extends:
      file: common-config.yml
      service: microservice-base-config
    networks:
      - healthcare

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - healthcare

  webapp:
    image: jirawah/webapp:latest
    container_name: webapp-ms
    ports:
      - "8082:8082"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "--silent", "http://localhost:8082/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
      mspatient:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-base-config
    networks:
      - healthcare

  webapp-frontend:
    build:
      context: ../../webApp-frontend
      dockerfile: Dockerfile
    container_name: webapp-frontend-ms
    ports:
      - "4200:80"
    depends_on:
      - eurekaserver
    networks:
      - healthcare

networks:
  healthcare:
    external: false

volumes:
  patient_data:
  mongo_data:



